input {
	file {
		path => "D:/TESTS/logstash multilines/METEO_NOAA_GRIB2_IMPORT.log"
		sincedb_path => "D:/TESTS/logstash multilines/METEO_NOAA_GRIB2_IMPORT.log.idx"
		start_position => "beginning"
		codec => multiline {
			pattern => "^<"
			what => previous
		}
	}
}

filter {
	mutate
	{
		gsub => ["message", "\n", "LINE_BREAK"]
	}
	grok {
		patterns_dir => "./patterns"
		match => ["message", ".*level=\"%{ALL:level}\" thread.*<code>%{ALL:code}</code>.*"]
	}
}

output {
	stdout { 
		codec => rubydebug
	}
	
	-- pattern
	
	ALL (.*)
	
	--- sample data
	
	<log4j:event logger="MMAutomate.MMANOAAGrib2" timestamp="1371445224593" datetime="2013-06-17 07:00" level="ERROR" thread="METEO_NOAA_GRIB2_IMPORT">
<log4j:message><code>701</code><pdesc>MMA-0701:Parsing failed</pdesc><comment>java.lang.NullPointerException</comment></log4j:message>
<log4j:NDC><![CDATA[METEO_NOAA_GRIB2_IMPORT]]></log4j:NDC>
<log4j:locationInfo class="MMAutomate.MMANOAAGrib2" method="readOneGrib2file" file="MMANOAAGrib2.java" line="275"/>
</log4j:event>

<log4j:event logger="MMAutomate.MMANOAAGrib2" timestamp="1371445231483" datetime="2013-06-17 07:00" level="ERROR" thread="METEO_NOAA_GRIB2_IMPORT">
<log4j:message><code>701</code><pdesc>MMA-0701:Parsing failed</pdesc><comment>java.lang.NullPointerException</comment></log4j:message>
<log4j:NDC><![CDATA[METEO_NOAA_GRIB2_IMPORT]]></log4j:NDC>
<log4j:locationInfo class="MMAutomate.MMANOAAGrib2" method="readOneGrib2file" file="MMANOAAGrib2.java" line="275"/>
</log4j:event>

<log4j:event logger="MMAutomate.MMANOAAGrib2" timestamp="1371445231749" datetime="2013-06-17 07:00" level="ERROR" thread="METEO_NOAA_GRIB2_IMPORT">
<log4j:message><code>701</code><pdesc>MMA-0701:Parsing failed</pdesc><comment>java.lang.NullPointerException</comment></log4j:message>
<log4j:NDC><![CDATA[METEO_NOAA_GRIB2_IMPORT]]></log4j:NDC>
<log4j:locationInfo class="MMAutomate.MMANOAAGrib2" method="readOneGrib2file" file="MMANOAAGrib2.java" line="275"/>
</log4j:event>


}

-------------------weblogic logstash ----------------------------------

input {
        file {
                path => [ "/home/agrdev02/agrdevweb12_logs/agora.log"]
                sincedb_path => "/home/agrdev02/agrdevweb12_logs/agoratest.idx"
                start_position => "beginning"
                codec => multiline {
                         pattern => "^[0-9]{4}"
                         negate => true
                         what => previous
                }
        }
}

filter {
        mutate
        {
                gsub => ["message", "\n", "LINE_BREAK"]
        }
        grok {
    #            match => ["message","<%{WLS_DATESTAMP %{GREEDYDATA:logmessage}"]
  #  match => ["message","%{DATA:wls_timestamp} %{WORD:severity} %{DATA:wls_topic} %{HOST:hostname} (%{WORD:server})? %{GREEDYDATA:logmessage}"]
    match => ["message","%{WLS_DATESTAMP:timestamp} \[\[%{DATA:thread_status}\] ExecuteThread: '%{INT:thread_nr}'  \] %{WORD:severity} %{DATA:logmessage}$"]
   tag_on_failure => ["parsefailure"]

     }

  if "parsefailure" in [tags] {
    grok {
     match => ["message","%{WLS_DATESTAMP:timestamp} \[%{DATA:thread_status}\] %{WORD:severity} %{DATA:logmessage}$"]
     tag_on_failure => ["failedagain"]
    }
  }
}

output {
        stdout {
                codec => rubydebug
        }

 elasticsearch {
        embedded => "false"
        cluster => "myCluster"
        index_type => "%{type}"
        host => "127.0.0.1"
   }
}


